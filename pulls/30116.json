{
    "pr_title": "p2p: Fill reconciliation sets (Erlay) attempt 2 #30116",
    "head": "20772c077832592265bd6a2876aa6b4cb7dbde7d",
    "diffs": [
        {
            "filename": "src/node/txreconciliation.cpp",
            "head": "20772c077832592265bd6a2876aa6b4cb7dbde7d",
            "mutation_score": 0.8,
            "generated_at": "2024-04-10 01:00:00",
            "diffs": [
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.1.cpp\nindex faa4714fc0..e352246c52 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.1.cpp\n@@ -124,7 +124,7 @@ public:\n     uint32_t ComputeShortID(const uint256 wtxid) const\n     {\n         const uint64_t s = SipHashUint256(m_k0, m_k1, wtxid);\n-        const uint32_t short_txid = 1 + (s & 0xFFFFFFFF);\n+        const uint32_t short_txid = 1 - (s & 0xFFFFFFFF);\n         return short_txid;\n     }\n };\n",
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.3.cpp\nindex faa4714fc0..cfc4c7131f 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.3.cpp\n@@ -124,7 +124,7 @@ public:\n     uint32_t ComputeShortID(const uint256 wtxid) const\n     {\n         const uint64_t s = SipHashUint256(m_k0, m_k1, wtxid);\n-        const uint32_t short_txid = 1 + (s & 0xFFFFFFFF);\n+        const uint32_t short_txid = (1 + (s & 0xFFFFFFFF)) - 1;\n         return short_txid;\n     }\n };\n",
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.2.cpp\nindex faa4714fc0..7728411786 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.2.cpp\n@@ -124,7 +124,7 @@ public:\n     uint32_t ComputeShortID(const uint256 wtxid) const\n     {\n         const uint64_t s = SipHashUint256(m_k0, m_k1, wtxid);\n-        const uint32_t short_txid = 1 + (s & 0xFFFFFFFF);\n+        const uint32_t short_txid = (1 + (s & 0xFFFFFFFF)) + 1;\n         return short_txid;\n     }\n };\n",
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.28.cpp\nindex faa4714fc0..1ef1461307 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.28.cpp\n@@ -359,7 +359,7 @@ public:\n \n         const auto registered = std::get_if<TxReconciliationState>(&peer->second);\n         if (registered && !registered->m_we_initiate) {\n-            Assert(m_inbounds_count > 0);\n+            Assert(m_inbounds_count >= 0);\n             --m_inbounds_count;\n         }\n \n",
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.30.cpp\nindex faa4714fc0..c1459427ac 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.30.cpp\n@@ -360,7 +360,7 @@ public:\n         const auto registered = std::get_if<TxReconciliationState>(&peer->second);\n         if (registered && !registered->m_we_initiate) {\n             Assert(m_inbounds_count > 0);\n-            --m_inbounds_count;\n+            ++m_inbounds_count;\n         }\n \n         m_states.erase(peer);\n",
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.31.cpp\nindex faa4714fc0..299673e5b7 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.31.cpp\n@@ -405,7 +405,7 @@ public:\n \n         for (const auto& [node_id, op_peer_state]: m_states) {\n             const auto peer_state = std::get_if<TxReconciliationState>(&op_peer_state);\n-            if (peer_state && peer_state->m_we_initiate == we_initiate) {\n+            if (peer_state || peer_state->m_we_initiate == we_initiate) {\n                 uint64_t hash_key = CSipHasher(deterministic_randomizer).Write(node_id).Finalize();\n                 best_peers.emplace_back(hash_key, node_id);\n             }\n",
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.34.cpp\nindex faa4714fc0..235fd1a1a2 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.34.cpp\n@@ -406,7 +406,7 @@ public:\n         for (const auto& [node_id, op_peer_state]: m_states) {\n             const auto peer_state = std::get_if<TxReconciliationState>(&op_peer_state);\n             if (peer_state && peer_state->m_we_initiate == we_initiate) {\n-                uint64_t hash_key = CSipHasher(deterministic_randomizer).Write(node_id).Finalize();\n+                uint64_t hash_key = (CSipHasher(deterministic_randomizer).Write(node_id).Finalize()) - 1;\n                 best_peers.emplace_back(hash_key, node_id);\n             }\n         }\n",
                "diff --git a/src/node/txreconciliation.cpp b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.33.cpp\nindex faa4714fc0..c986e5a2f0 100644\n--- a/src/node/txreconciliation.cpp\n+++ b/muts-pr-30116-txreconciliation-cpp/txreconciliation.mutant.33.cpp\n@@ -406,7 +406,7 @@ public:\n         for (const auto& [node_id, op_peer_state]: m_states) {\n             const auto peer_state = std::get_if<TxReconciliationState>(&op_peer_state);\n             if (peer_state && peer_state->m_we_initiate == we_initiate) {\n-                uint64_t hash_key = CSipHasher(deterministic_randomizer).Write(node_id).Finalize();\n+                uint64_t hash_key = (CSipHasher(deterministic_randomizer).Write(node_id).Finalize()) + 1;\n                 best_peers.emplace_back(hash_key, node_id);\n             }\n         }\n"
            ]
        }
    ]
}