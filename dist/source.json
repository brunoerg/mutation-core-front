[
  {
    "filename": "src/wallet/coinselection.cpp",
    "diffs": [
      "diff --git a/src/wallet/coinselection.cpp b/muts/coinselection.mutant.14.cpp\nindex cee558088f..947bf7b642 100644\n--- a/src/wallet/coinselection.cpp\n+++ b/muts/coinselection.mutant.14.cpp\n@@ -118,7 +118,7 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     CAmount best_waste = MAX_MONEY;\n \n     bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n-    bool max_tx_weight_exceeded = false;\n+        bool max_tx_weight_exceeded = true;\n \n     // Depth First search loop for choosing the UTXOs\n     for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n",
      "diff --git a/src/wallet/coinselection.cpp b/muts/coinselection.mutant.17.cpp\nindex cee558088f..b99220fd05 100644\n--- a/src/wallet/coinselection.cpp\n+++ b/muts/coinselection.mutant.17.cpp\n@@ -121,7 +121,7 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     bool max_tx_weight_exceeded = false;\n \n     // Depth First search loop for choosing the UTXOs\n-    for (size_t curr_try = 0, utxo_pool_index = 0; curr_try < TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n+        for (size_t curr_try = 0, utxo_pool_index = 0; curr_try <= TOTAL_TRIES; ++curr_try, ++utxo_pool_index) {\n         // Conditions for starting a backtrack\n         bool backtrack = false;\n         if (curr_value + curr_available_value < selection_target || // Cannot possibly reach target with the amount remaining in the curr_available_value.\n",
      "diff --git a/src/wallet/coinselection.cpp b/muts/coinselection.mutant.12.cpp\nindex cee558088f..a10f510bb3 100644\n--- a/src/wallet/coinselection.cpp\n+++ b/muts/coinselection.mutant.12.cpp\n@@ -117,7 +117,7 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n     std::vector<size_t> best_selection;\n     CAmount best_waste = MAX_MONEY;\n \n-    bool is_feerate_high = utxo_pool.at(0).fee > utxo_pool.at(0).long_term_fee;\n+        bool is_feerate_high = utxo_pool.at(0).fee >= utxo_pool.at(0).long_term_fee;\n     bool max_tx_weight_exceeded = false;\n \n     // Depth First search loop for choosing the UTXOs\n",
      "diff --git a/src/wallet/coinselection.cpp b/muts/coinselection.mutant.37.cpp\nindex cee558088f..9747cd26c9 100644\n--- a/src/wallet/coinselection.cpp\n+++ b/muts/coinselection.mutant.37.cpp\n@@ -128,7 +128,7 @@ util::Result<SelectionResult> SelectCoinsBnB(std::vector<OutputGroup>& utxo_pool\n             curr_value > selection_target + cost_of_change || // Selected value is out of range, go back and try other branch\n             (curr_waste > best_waste && is_feerate_high)) { // Don't select things which we know will be more wasteful if the waste is increasing\n             backtrack = true;\n-        } else if (curr_selection_weight > max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n+                } else if (curr_selection_weight >= max_selection_weight) { // Selected UTXOs weight exceeds the maximum weight allowed, cannot find more solutions by adding more inputs\n             max_tx_weight_exceeded = true; // at least one selection attempt exceeded the max weight\n             backtrack = true;\n         } else if (curr_value >= selection_target) {       // Selected value is within range\n"
    ]
  }
]